<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="2" failures="6" skipped="0" tests="38" time="3.006" timestamp="2025-08-09T14:25:24.178041" hostname="kensan196948G"><testcase classname="tests.test_database.TestDatabaseManager" name="test_database_initialization" time="0.084" /><testcase classname="tests.test_database.TestDatabaseManager" name="test_insert_work" time="0.046" /><testcase classname="tests.test_database.TestDatabaseManager" name="test_insert_release" time="0.060" /><testcase classname="tests.test_database.TestDatabaseManager" name="test_unique_constraint_enforcement" time="0.073" /><testcase classname="tests.test_database.TestDatabaseManager" name="test_type_constraint_enforcement" time="0.059" /><testcase classname="tests.test_database.TestDatabaseManager" name="test_query_unnotified_releases" time="0.069" /><testcase classname="tests.test_database.TestDatabaseManager" name="test_update_notification_status" time="0.074" /><testcase classname="tests.test_database.TestDatabasePerformance" name="test_bulk_insert_performance" time="0.074" /><testcase classname="tests.test_database.TestDatabasePerformance" name="test_query_performance_with_indexes" time="0.072" /><testcase classname="tests.test_config.TestConfigManager" name="test_config_loading_from_file" time="0.011" /><testcase classname="tests.test_config.TestConfigManager" name="test_config_validation" time="0.004" /><testcase classname="tests.test_config.TestConfigManager" name="test_environment_variable_override" time="0.004" /><testcase classname="tests.test_config.TestConfigManager" name="test_get_rss_feeds_config" time="0.003" /><testcase classname="tests.test_config.TestConfigManager" name="test_get_enabled_rss_feeds_by_category" time="0.003" /><testcase classname="tests.test_config.TestConfigManager" name="test_filtering_config_access" time="0.003" /><testcase classname="tests.test_config.TestConfigManager" name="test_notification_config_validation" time="0.003" /><testcase classname="tests.test_config.TestConfigManager" name="test_config_file_not_found_handling" time="0.002" /><testcase classname="tests.test_config.TestConfigManager" name="test_invalid_json_handling" time="0.002" /><testcase classname="tests.test_config.TestConfigManager" name="test_config_deep_merge" time="0.002" /><testcase classname="tests.test_config.TestConfigManager" name="test_config_template_generation" time="0.002" /><testcase classname="tests.test_config.TestConfigSecurityAndValidation" name="test_sensitive_data_masking" time="0.002" /><testcase classname="tests.test_config.TestConfigSecurityAndValidation" name="test_config_encryption_decryption" time="0.002" /><testcase classname="tests.test_config.TestConfigSecurityAndValidation" name="test_config_schema_validation" time="0.001"><error message="failed on setup with &quot;file /media/kensan/LinuxHDD/MangaAnime-Info-delivery-system/tests/test_config.py, line 396&#10;      @pytest.mark.unit&#10;      def test_config_schema_validation(self, sample_config_data):&#10;E       fixture 'sample_config_data' not found&#10;&gt;       available fixtures: _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, cov, doctest_namespace, event_loop, extra, extras, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, include_metadata_in_junit_xml, json_metadata, metadata, mock_anilist_response, mock_calendar_service, mock_gmail_service, mock_requests_session, mock_rss_feed_data, mocker, module_mocker, monkeypatch, no_cover, package_mocker, performance_test_config, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_release_data, sample_work_data, session_mocker, setup_test_environment, temp_db, test_config, test_data_generator, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/media/kensan/LinuxHDD/MangaAnime-Info-delivery-system/tests/test_config.py:396&quot;">file /media/kensan/LinuxHDD/MangaAnime-Info-delivery-system/tests/test_config.py, line 396
      @pytest.mark.unit
      def test_config_schema_validation(self, sample_config_data):
E       fixture 'sample_config_data' not found
&gt;       available fixtures: _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, cov, doctest_namespace, event_loop, extra, extras, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, include_metadata_in_junit_xml, json_metadata, metadata, mock_anilist_response, mock_calendar_service, mock_gmail_service, mock_requests_session, mock_rss_feed_data, mocker, module_mocker, monkeypatch, no_cover, package_mocker, performance_test_config, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_release_data, sample_work_data, session_mocker, setup_test_environment, temp_db, test_config, test_data_generator, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/media/kensan/LinuxHDD/MangaAnime-Info-delivery-system/tests/test_config.py:396</error></testcase><testcase classname="tests.test_config.TestConfigPerformance" name="test_config_loading_performance" time="0.001"><error message="failed on setup with &quot;file /media/kensan/LinuxHDD/MangaAnime-Info-delivery-system/tests/test_config.py, line 455&#10;      @pytest.mark.performance&#10;      def test_config_loading_performance(self, temp_config_file):&#10;E       fixture 'temp_config_file' not found&#10;&gt;       available fixtures: _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, cov, doctest_namespace, event_loop, extra, extras, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, include_metadata_in_junit_xml, json_metadata, metadata, mock_anilist_response, mock_calendar_service, mock_gmail_service, mock_requests_session, mock_rss_feed_data, mocker, module_mocker, monkeypatch, no_cover, package_mocker, performance_test_config, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_release_data, sample_work_data, session_mocker, setup_test_environment, temp_db, test_config, test_data_generator, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/media/kensan/LinuxHDD/MangaAnime-Info-delivery-system/tests/test_config.py:455&quot;">file /media/kensan/LinuxHDD/MangaAnime-Info-delivery-system/tests/test_config.py, line 455
      @pytest.mark.performance
      def test_config_loading_performance(self, temp_config_file):
E       fixture 'temp_config_file' not found
&gt;       available fixtures: _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, cov, doctest_namespace, event_loop, extra, extras, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, include_metadata_in_junit_xml, json_metadata, metadata, mock_anilist_response, mock_calendar_service, mock_gmail_service, mock_requests_session, mock_rss_feed_data, mocker, module_mocker, monkeypatch, no_cover, package_mocker, performance_test_config, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_release_data, sample_work_data, session_mocker, setup_test_environment, temp_db, test_config, test_data_generator, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/media/kensan/LinuxHDD/MangaAnime-Info-delivery-system/tests/test_config.py:455</error></testcase><testcase classname="tests.test_config.TestConfigPerformance" name="test_config_caching_mechanism" time="0.002" /><testcase classname="tests.test_filtering.TestContentFiltering" name="test_ng_keyword_filtering_title" time="0.002"><failure message="AssertionError: Title '百合姫' filtering result mismatch&#10;assert False == True">tests/test_filtering.py:36: in test_ng_keyword_filtering_title
    assert is_filtered == should_be_filtered, f"Title '{title}' filtering result mismatch"
E   AssertionError: Title '百合姫' filtering result mismatch
E   assert False == True</failure></testcase><testcase classname="tests.test_filtering.TestContentFiltering" name="test_ng_keyword_filtering_description" time="0.002"><failure message="AssertionError: Description filtering result mismatch&#10;assert False == True">tests/test_filtering.py:56: in test_ng_keyword_filtering_description
    assert is_filtered == should_be_filtered, f"Description filtering result mismatch"
E   AssertionError: Description filtering result mismatch
E   assert False == True</failure></testcase><testcase classname="tests.test_filtering.TestContentFiltering" name="test_ng_genre_filtering" time="0.001" /><testcase classname="tests.test_filtering.TestContentFiltering" name="test_combined_filtering_logic" time="0.001" /><testcase classname="tests.test_filtering.TestContentFiltering" name="test_case_insensitive_filtering" time="0.002"><failure message="AssertionError: Text 'ero anime' case-insensitive filtering failed&#10;assert False == True">tests/test_filtering.py:144: in test_case_insensitive_filtering
    assert is_filtered == should_be_filtered, f"Text '{text}' case-insensitive filtering failed"
E   AssertionError: Text 'ero anime' case-insensitive filtering failed
E   assert False == True</failure></testcase><testcase classname="tests.test_filtering.TestContentFiltering" name="test_partial_keyword_matching" time="0.002"><failure message="AssertionError: Partial matching for 'アダルトチルドレン' failed&#10;assert False == True">tests/test_filtering.py:163: in test_partial_keyword_matching
    assert is_filtered == should_be_filtered, f"Partial matching for '{text}' failed"
E   AssertionError: Partial matching for 'アダルトチルドレン' failed
E   assert False == True</failure></testcase><testcase classname="tests.test_filtering.TestContentFiltering" name="test_tag_filtering" time="0.002"><failure message="AssertionError: Tag filtering for ['Ecchi', 'Fanservice'] failed&#10;assert False == True">tests/test_filtering.py:204: in test_tag_filtering
    assert is_filtered == expected, f"Tag filtering for {tags} failed"
E   AssertionError: Tag filtering for ['Ecchi', 'Fanservice'] failed
E   assert False == True</failure></testcase><testcase classname="tests.test_filtering.TestFilteringPerformance" name="test_bulk_filtering_performance" time="0.002" /><testcase classname="tests.test_filtering.TestFilteringPerformance" name="test_regex_vs_string_matching_performance" time="0.019" /><testcase classname="tests.test_filtering.TestFilteringEdgeCases" name="test_empty_input_filtering" time="0.001" /><testcase classname="tests.test_filtering.TestFilteringEdgeCases" name="test_unicode_and_special_characters" time="0.001" /><testcase classname="tests.test_filtering.TestFilteringEdgeCases" name="test_very_long_text_filtering" time="0.001"><failure message="NameError: name 'time' is not defined. Did you forget to import 'time'">tests/test_filtering.py:401: in test_very_long_text_filtering
    start_time = time.time()
E   NameError: name 'time' is not defined. Did you forget to import 'time'</failure></testcase><testcase classname="tests.test_filtering.TestFilteringEdgeCases" name="test_japanese_text_normalization" time="0.002" /></testsuite></testsuites>