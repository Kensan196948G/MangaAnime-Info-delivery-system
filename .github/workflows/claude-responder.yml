name: 🤖 Claude Auto Responder

on:
  issue_comment:
    types: [created]
  issues:
    types: [opened]
  workflow_dispatch:  # 手動実行を追加

permissions:
  issues: write
  contents: read

jobs:
  claude-respond:
    name: Claude Response
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'issues' && contains(github.event.issue.body, '@claude'))
    
    steps:
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: 📦 Install anthropic
      run: pip install anthropic
    
    - name: 🤖 Process with Claude
      env:
        CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        python - << 'EOF'
        import os
        import json
        import re
        from anthropic import Anthropic
        
        # APIキー確認
        api_key = os.environ.get('CLAUDE_API_KEY')
        if not api_key:
            print("❌ CLAUDE_API_KEY not found")
            exit(1)
        
        # イベントデータ取得
        with open(os.environ['GITHUB_EVENT_PATH'], 'r') as f:
            event = json.load(f)
        
        # コンテンツ取得
        if 'comment' in event:
            content = event['comment']['body']
            issue_number = event['issue']['number']
            user = event['comment']['user']['login']
        else:
            content = event['issue']['body']
            issue_number = event['issue']['number']
            user = event['issue']['user']['login']
        
        # @claude 除去
        query = re.sub(r'@claude\s*', '', content, flags=re.IGNORECASE).strip()
        
        print(f"📝 Processing request from {user}")
        
        try:
            # Claude API 呼び出し
            client = Anthropic(api_key=api_key)
            message = client.messages.create(
                model="claude-3-haiku-20240307",
                max_tokens=1000,
                messages=[{"role": "user", "content": query}]
            )
            
            response_text = message.content[0].text
            
            # GitHub コメント投稿
            import urllib.request
            
            comment = f"""## 🤖 Claude Response
            
{response_text}

---
*Requested by @{user}*"""
            
            api_url = f"https://api.github.com/repos/{os.environ['GITHUB_REPOSITORY']}/issues/{issue_number}/comments"
            
            headers = {
                'Authorization': f"token {os.environ['GITHUB_TOKEN']}",
                'Accept': 'application/vnd.github.v3+json'
            }
            
            data = json.dumps({'body': comment}).encode('utf-8')
            req = urllib.request.Request(api_url, data=data, headers=headers)
            urllib.request.urlopen(req)
            
            print(f"✅ Posted response to Issue #{issue_number}")
            
        except Exception as e:
            print(f"❌ Error: {str(e)}")
            exit(1)
        EOF